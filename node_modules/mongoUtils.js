//var mongoUtility=mongoUtility || {};//either equals mongConnection if it exists, or nothing...this is kind of cool, but over the top for a simple class

var mongoUtility=function(options){//class declaration
    var MongoClient = require('mongodb').MongoClient;
    var self=this;// to give "this" scope regardless in this class
    if(!options.url){//if url not supplied
        self.url='mongodb://localhost:27017/myTestDB'; //default url..does this.url need to be instantiated?  I guess not..
    }
    else{
        self.url=options.url;
    }
    if(!options.collections){
        self.collections="visitors";
    }
    else{
        self.collections=options.collections;
    }
    self.insertData=function(data){
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
                db.collection(self.collections).insert(data, function(err, result){
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success");
                        db.close();
                    }
                });
            }
        });
    }
    self.updateData=function(id, field, data){ //having issues with how field is passed..
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
                db.collection(self.collections).updateOne({"_id":id}, {$set:{field:data}}, function(err, result){ //update "dateLeft" so we can get average time spent, etc
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success Update");
                        //console.log(result.result.nModified);
                        //id=result.ops[0]._id; //if this works ill be shocked!
                        db.close();
                        //callback(result);
                    }
                });
            }
        });
    }
    self.retrieveData=function(groupField, field, callback){ //eventaully I want "GroupType" to not just be sum...
        field="$"+field;
        //console.log(typeof(this.collections));
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
                db.collection(self.collections).aggregate([
                    {$group:{"_id":field, "value":{$sum:groupField}}}
                ]).toArray(function(err, result){ //update "dateLeft" so we can get average time spent, etc
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success");
                        //console.log(result);
                        //id=result.ops[0]._id; //if this works ill be shocked!
                        db.close();
                        callback(result);
                    }
                });
            }
        });
    }
    
}; 
module.exports=mongoUtility; //exportable class